name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3', '8.4']
        dependencies: ['lowest', 'highest']
        exclude:
          # Skip lowest dependencies on newer PHP versions to reduce matrix size
          - php-version: '8.2'
            dependencies: 'lowest'
          - php-version: '8.3'
            dependencies: 'lowest'
          - php-version: '8.4'
            dependencies: 'lowest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json, mbstring, curl
          coverage: xdebug
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ matrix.dependencies }}-
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies (highest)
        if: matrix.dependencies == 'highest'
        run: |
          if [[ "${{ matrix.php-version }}" == "7.4" || "${{ matrix.php-version }}" == "8.0" ]]; then
            composer update --no-interaction --no-progress --prefer-dist --optimize-autoloader
          else
            composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader
          fi

      - name: Install dependencies (lowest)
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-lowest --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Validate composer.json
        run: composer validate --ansi

      - name: Run code style check
        run: composer lint

      - name: Run static analysis
        run: composer stan

      - name: Run tests
        run: composer test-coverage

      - name: Upload coverage reports
        if: matrix.php-version == '8.1' && matrix.dependencies == 'highest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: json, mbstring, curl
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-security-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-security-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --no-interaction --no-progress --prefer-dist

      - name: Run security audit
        run: composer audit --no-dev
        continue-on-error: true

  examples:
    name: Examples
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: json, mbstring, curl
          tools: composer:v2

      - name: Install dependencies
        run: composer update --no-interaction --no-progress --prefer-dist

      - name: Test examples syntax
        run: |
          find examples -name "*.php" -exec php -l {} \;

  minimum-php:
    name: Minimum PHP Version Support
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: json, mbstring, curl
          tools: composer:v2

      - name: Install dependencies
        run: composer update --no-interaction --no-progress --prefer-dist

      - name: Run basic tests on minimum PHP version
        run: composer test

  qa:
    name: Quality Assurance
    runs-on: ubuntu-latest
    needs: [test, security, examples, minimum-php]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: json, mbstring, curl
          tools: composer:v2

      - name: Install dependencies
        run: composer update --no-interaction --no-progress --prefer-dist

      - name: Run full QA suite
        run: composer qa

      - name: Success notification
        run: echo "âœ… All quality assurance checks passed!"
